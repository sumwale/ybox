# Configuration specific to each distribution (INI style file)

[base]
# name is required
name = Arch Linux
# points to the daily updated image to minimize upgrade size
image = quay.io/archlinux/archlinux
# directories which are shared between the containers of a distribution when
# `shared_root` is set to true in the container configuration
shared_root_dirs = /etc,/opt,/usr,/var
# additional scripts that need to be copied to the container in $YBOX_TARGET_SCRIPTS_DIR
# (init.sh, init-base.sh and init-user.sh scripts are normally required for all distributions
#  and do not need to be specified here)
scripts = pkgdeps.py,list_fmt.py,list_fmt_long.py,list_fmt_common.py

# The commands here will be run as normal userns mapped user, so use sudo if the command
# needs to run as root inside the container
[pkgmgr]
# the variables here are all required ones unless noted otherwise
install = /usr/bin/paru -S --needed {quiet} {opt_dep}
quiet_flag = --noconfirm
opt_deps = /usr/bin/python3 $YBOX_TARGET_SCRIPTS_DIR/pkgdeps.py \
           -s '{separator}' -p '{prefix}' -H '{header}'
# --asdeps works correctly only if an optional dependency is actually marked to be so in
# the arch package, but will cause trouble for cases where user wants to mark a package as
# an optional dependency of another even otherwise (e.g. qt5ct as optional dependency of qt5-base)
# opt_dep_flag = --asdeps
opt_dep_flag =
uninstall = /usr/bin/paru -R {quiet} {purge} {remove_deps}
purge_flag = --nosave
remove_deps_flag = --recursive
update_meta = /usr/bin/paru -Sy
update = /usr/bin/paru -S --needed {quiet}
update_all = /usr/bin/paru -Syu {quiet}
cleanup = /bin/yes | /usr/bin/paru -Sccd
info = /usr/bin/pacman -Qi

# next three variables are not required ones rather are used for expansion in list variables
# to avoid repetition
list_fmt = /usr/bin/python3 $YBOX_TARGET_SCRIPTS_DIR/list_fmt.py -p {plain_separator}
list_fmt_long = /usr/bin/python3 $YBOX_TARGET_SCRIPTS_DIR/list_fmt_long.py -p {plain_separator}
pager = /usr/bin/less -RLF

list = /usr/bin/pacman -Qe {packages} | %(list_fmt)s | %(pager)s
list_all = /usr/bin/pacman -Q {packages} | %(list_fmt)s | %(pager)s
list_long = /usr/bin/pacman -Qie {packages} | %(list_fmt_long)s | %(pager)s
list_all_long = /usr/bin/pacman -Qi {packages} | %(list_fmt_long)s | %(pager)s
list_files = /usr/bin/pacman -Qlq

# next five variables are not required ones rather are used for expansion in search variables
# to avoid repetition and/or reduce value size

# --searchby=name only applies to the AUR packages, so filter out packages where only the package
# names match; the weird "set ..." subcommand converts space-separated quoted arguments into a
# regex i.e. ' one ' 'two' ' three' to " one |two | three" which is accomplished by declaring
# those arguments as positional arguments $1, $2 etc, then echo all arguments with IFS as "|"
args_re = "$(set -- {search}; IFS="|"; echo "$*")"
# word matching works correctly after removing color codes, but keep those in the final output
search_filter_prefix = /usr/bin/gawk 'BEGIN {{ IGNORECASE=1 }} /^[^[:space:]].*/ {{
                           pkg = $0; gsub(/\x1B\[[0-9;]+m/, ""); pkg_nc = $0; getline; '
search_filter_suffix = 'if (pkg_nc ~ /{word_start}('%(args_re)s'){word_end}/) print pkg"\n"$0 }}'
name_filter = %(search_filter_prefix)s%(search_filter_suffix)s
all_filter = %(search_filter_prefix)s'pkg_nc = pkg_nc $0; '%(search_filter_suffix)s

search = /usr/bin/paru -Ss {quiet} {official} --searchby=name --sortby=popularity --color=always \
         {search} | %(name_filter)s | %(pager)s
search_all = /usr/bin/paru -Ss {quiet} {official} --sortby=popularity --color=always \
         {search} | %(all_filter)s | %(pager)s
search_quiet_flag = -q
search_official_flag = --repo
search_word_start_flag = \<
search_word_end_flag = \>
