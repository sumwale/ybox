#!/usr/bin/python3

import subprocess

# noinspection PyUnresolvedReferences
from bin_util import *
from zbox.util import *


@typechecked
def main() -> int:
    args = parse_args()
    docker_cmd = get_docker_command(args)
    container_name = args.container_name
    if not docker_cmd:
        sys.exit("Neither /usr/bin/podman nor /usr/bin/docker found and no -d option provided")

    print_color(f"Stopping container '{container_name}'", fg=fgcolor.cyan)
    stop_result = subprocess.run([docker_cmd, "container", "stop", container_name])
    if stop_result.returncode != 0:
        print_color(f"FAILED to stop '{container_name}'", fg=fgcolor.red)
        return 1

    print_color(f"Removing container '{container_name}'", fg=fgcolor.purple)
    rm_result = subprocess.run([docker_cmd, "container", "rm", container_name])
    if rm_result.returncode != 0:
        print_color(f"FAILED to remove '{container_name}'", fg=fgcolor.red)
        return 1

    return 0


@typechecked
def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument("-d", "--docker-path", type=str,
                        help="path of docker/podman if not in /usr/bin")
    parser.add_argument("container_name", type=str, help="name of the running box")
    return parser.parse_args()


sys.exit(main())
